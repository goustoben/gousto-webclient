
describe("Projected Deliveries", () => {
  beforeEach(() => {
    cy.server()
    cy.fixture('user/userCurrent').as('userCurrent')
    cy.route('GET', /user\/current/, '@userCurrent')
    cy.fixture('user/userCurrentOrders').as('userCurrentOrders')
    cy.route('GET', /user\/current\/orders/, '@userCurrentOrders')
    cy.fixture('user/userCurrentProjectedDeliveries').as('userCurrentProjectedDeliveries')
    cy.route('GET', /user\/current\/projected-deliveries/, '@userCurrentProjectedDeliveries')
    cy.fixture('user/userCurrentAddress').as('userCurrentAddress')
    cy.route('GET', /user\/current\/address/, '@userCurrentAddress')
    cy.fixture('user/userCurrentSubscription').as('userCurrentSubscription')
    cy.route('GET', /user\/current\/subscription/, '@userCurrentSubscription')
    cy.route('GET', /customers\/v1\/customers\/\/addresses/, {})
    cy.fixture('orderSkipRecovery').as('orderSkipRecovery')
    cy.route('GET', /orderskiprecovery/, '@orderSkipRecovery')
    cy.fixture('user/userCurrentSubscriptionDelivery').as('userCurrentSubscriptionDelivery')
    cy.route('POST', /user\/current\/subscription\/delivery\/disable/, '@userCurrentSubscriptionDelivery').as('cancelProjectedDelivery')
    cy.route('POST', /user\/(.*)\/subscription\/delivery\/enable/, '@userCurrentSubscriptionDelivery').as('restoreProjectedDelivery')

    cy.login()
    cy.visit('/mydeliveries')
  })

  it("should be able to cancel and restore the order", () => {
    cy.get('[data-testing="projectedDelivery"]').first().get('[data-testing="orderState"]').contains('Scheduled')
    cy.get('[data-testing="projectedDelivery"]').first().click()
    cy.get('[data-testing="cancelButton"]').click()
    cy.wait('@cancelProjectedDelivery')
    cy.get('[data-testing="projectedDelivery"]').first().get('[data-testing="orderState"]').contains('Cancelled')
    cy.get('[data-testing="restoreButton"]').click()
    cy.wait('@restoreProjectedDelivery')
    cy.get('[data-testing="projectedDelivery"]').first().get('[data-testing="orderState"]').contains('Scheduled')
  })
})
