name: Create or update Production Deploy PR
on:
  push:
    branches:
      - "develop"
jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get open pull requests
        id: get_production_pr_number
        uses: octokit/graphql-action@v2.x
        with:
          query: |
            query release($owner:String!,$repo:String!) {
              repository(owner:$owner,name:$repo) {
                pullRequests(baseRefName: "master", headRefName: "develop", states: [OPEN], first: 1) {
                  nodes {
                    number,
                    bodyText
                  }
                }
              }
            }
          owner: ${{ github.event.repository.owner.name }}
          repo: ${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Parse response to JSON
        id: pull_requests_json
        uses: gr2m/get-json-paths-action@v1.x
        with:
          json: ${{ steps.get_production_pr_number.outputs.data }}
          number: "repository.pullRequests.nodes[0].number"
          bodyText: "repository.pullRequests.nodes[0].bodyText"
      - name: Create Production PR if one doesn't exist
        if: ${{ !steps.pull_requests_json.outputs.number }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "Production Deploy",
              body: "- [ ] ${{ github.event.commits[0].message }} @${{ github.event.commits[0].author.username }}",
              head: "develop",
              base: "master"
            })
      - name: Update Production PR if one exists
        if: ${{ steps.pull_requests_json.outputs.number }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "${{ steps.pull_requests_json.outputs.bodyText }}\n- [ ] ${{ github.event.commits[0].message }} @${{ github.event.commits[0].author.username }}",
              pull_number: ${{ steps.pull_requests_json.outputs.number }}
            })
