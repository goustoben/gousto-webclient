<VirtualHost *:80>
  ServerName {{ domain }}
  ServerAlias www.gousto.co.uk www2.gousto.co.uk gousto.co.uk {{ environment_name }}-www.{{ tld }}

  ## Vhost docroot
  DocumentRoot "{{ directory }}/public"

  ## Directories, there should at least be a declaration for {{ directory }}/public

  <Directory "{{ directory }}/public">
    Options Indexes FollowSymLinks MultiViews
    AllowOverride All
    Require all granted
  </Directory>

  ProxyRequests Off

  ## Performance tweaks
  KeepAlive On

  ## Send menu traffic to NodeJS
  ProxyPreserveHost On
  ProxyPassMatch ^\/$ http://localhost:3000
  ProxyPass /menu http://localhost:3000/menu
  ProxyPass /home http://localhost:3000/home
  ProxyPass /check-out http://localhost:3000/check-out
  ProxyPass /jobs http://localhost:3000/jobs
  ProxyPassMatch "^/cookbook$" "http://localhost:3000"
  ProxyPassMatch "^/cookbook/[^/]*$" "http://localhost:3000"
  ProxyPass /apps http://localhost:3000/apps

  ## Send Account traffic to NodeJS
  ## ProxyPass /mygousto http://localhost:3000/mygousto
  ProxyPass /mydeliveries http://localhost:3000/mydeliveries
  ProxyPass /mysubscription http://localhost:3000/mysubscription
  ## ProxyPass /mydetails http://localhost:3000/mydetails
  ## ProxyPass /myreferral http://localhost:3000/myreferral
  ## ProxyPass /rate-recipes http://localhost:3000/rate-recipes

  # GraphQL Box Prices proxy
  ProxyPass /box-prices http://localhost:3000/box-prices

  ## Send new welcome page traffic to NodeJS
  ProxyPass /welcome-to-gousto http://localhost:3000/welcome-to-gousto
  ProxyPass /welcome-to-gousto-2 http://localhost:3000/welcome-to-gousto-2

  ## Send new reset password page traffic to NodeJS
  ProxyPass /newpasswordform http://localhost:3000/newpasswordform

  ## Send new unsubscribe page traffic to NodeJS
  ProxyPass /unsubscribe http://localhost:3000/unsubscribe

  ## Send new join page traffic to NodeJS
  ProxyPass /join2 http://localhost:3000/join2
  ProxyPass /join http://localhost:3000/join

  ## Send new wizard traffic to NodeJS
  ProxyPass /signup http://localhost:3000/signup
  ProxyPass /signup-2 http://localhost:3000/signup
  
  ## Send postcode lookup to NodeJS
  ProxyPass /address/postcode-lookup http://localhost:3000/address/postcode-lookup

  ## Send new wizard traffic to NodeJS

  # For nodeserver assets
  ProxyPass /nsassets http://localhost:3000/nsassets

  ## Logging
  LogFormat "- %h %l %u %t \"%r\" %>s %b %D \"%{Referer}i\" \"%{User-Agent}i\"" direct
  LogFormat "%{X-Forwarded-For}i %h %l %u %t \"%r\" %>s %b %D \"%{Referer}i\" \"%{User-Agent}i\"" external

  ErrorLog "/var/log/apache2/{{ error_log }}"
  ServerSignature Off

  SetEnvIf X-Forwarded-For "^.*\..*\..*\..*" forwarded
  CustomLog "/var/log/apache2/{{ access_log }}" direct env=!forwarded
  CustomLog "/var/log/apache2/{{ access_log }}" external env=forwarded

  ## SetEnv/SetEnvIf for environment variables
  SetEnv GOUSTO2_ENV local

  ## Domain redirect

  TraceEnable Off
  RewriteEngine On

  {% if environment_name != 'production' %}
  RewriteCond %{HTTP_HOST}        !^{{ domain }}
  {% endif %}
  RewriteCond %{HTTP_HOST}        !^{{ environment_name }}-www.{{ tld }}
  RewriteCond %{HTTP_HOST}        !^www.gousto.co.uk
  RewriteCond %{HTTP_HOST}        !^www2.gousto.co.uk
  RewriteCond %{REQUEST_URI}      !^/health/
  RewriteRule ^/?(.*)$            {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/$1 [R=permanent,QSA,L]

  ## Protocol redirect

  RewriteCond %{HTTP:X-Forwarded-Proto}   !=""
  RewriteCond %{HTTP:X-Forwarded-Proto}   !{{ 'https' if secure == true else 'http' }}
  RewriteCond %{REQUEST_URI}              !^/health/
  RewriteRule ^/?(.*)$                    {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/$1 [R=permanent,QSA,L]

  RewriteCond %{REQUEST_METHOD} !^POST$
  RewriteRule ^/(login)(.*)               {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/#$1  [R=permanent,QSA,NE,L]

  ## Admin redirect

  RewriteRule ^/(admin)$                  {{ 'https' if secure == true else 'http' }}://{{ 'admin.gousto.co.uk' if environment_name == 'production' else admin_domain }}/admin
  RewriteRule ^/(admin/)(.*)$             {{ 'https' if secure == true else 'http' }}://{{ 'admin.gousto.co.uk' if environment_name == 'production' else admin_domain }}/admin/$2

  ## TWR & NWR Redirects

  # See: http://stackoverflow.com/questions/25520448/multiple-rewriterule-to-one-rewritecond

  RewriteRule   ^/(this-weeks-recipes)(.*)        {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]
  RewriteRule   ^/(next-weeks-recipes)(.*)        {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]

  RewriteRule   ^/(choose-recipes)(.*)        {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]
  RewriteRule   ^/(food-bags)(.*)       {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]
  RewriteRule   ^/(four-a-week/2-people)(.*)        {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]
  RewriteRule   ^/(four-a-week/4-people)(.*)        {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]
  RewriteRule   ^/(four-a-week/6-people)(.*)        {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]
  RewriteRule   ^/(loyalty-programme)(.*)       {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]
  RewriteRule   ^/(recipes)(.*)       {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]
  RewriteRule   ^/(subscribe)(.*)       {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]
  RewriteRule   ^/(subscribe-4-times-a-week)(.*)        {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]
  RewriteRule   ^/(subscribe-twice-a-week)(.*)        {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]
  RewriteRule   ^/(christmas-box)(.*)       {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]
  RewriteRule   ^/(customer/account/create)(.*)       {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]
  RewriteRule   ^/(customer/choices)(.*)        {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/menu$2  [R=permanent,QSA,L]

  # Old stack cookbook redirect
  RewriteRule   ^/index.php/cookbook(.*)$             {{ 'https' if secure == true else 'http' }}://{{ 'www.gousto.co.uk' if environment_name == 'production' else domain }}/cookbook$1  [R=permanent,QSA,L]

</VirtualHost>
