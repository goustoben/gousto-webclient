@value White, Chia, DarkChilli from 'styles/colors.css';
@value ScreenXXSMax, ScreenSMMax, ScreenXSMax, HeightSMMax, HeightMDMin, HeightMDMax, ScreenMDMin, ScreenSMMin from 'styles/screenSizes.css';
@value SpacingLG, SpacingMD, SpacingXS, ScreenXXSMin, SpacingXXS, SpacingSM from 'sass-loader!styles/spacing.scss';
@value BreakpointFromMedium from 'design-language/breakpoints.css';

@value minHeight 485px;
@value maxWidth 750px;
@value maxElWidth calc(maxWidth - 2px);

.signupContainer {
  composes: flex from 'styles/display.css';
  composes: column from 'styles/flex.css';
  width: 100%;
  height: 100%;

  padding-top: 40px;

  @media ScreenXSMax {
    padding-top: SpacingSM;
  }
}

.signupWrapper {
  width: 100%;
}

.stepsContainer {
  composes: borderXS from 'styles/borders.css';
  max-width: maxWidth;
  margin: auto;
  position: relative;
  border-radius: 0;
  background: White;
}

.stepContainer {
  composes: flex from 'styles/display.css';
  composes: column spaceBetween verticalCenter from 'styles/flex.css';
  max-width: maxElWidth;

  @media ScreenXXSMax {
    justify-content: flex-start;
  }
}

.fullWidth {
  width: 100%;
}

.step {
  composes: container-fluid from 'sass-loader!styles/bootstrap.scss';
  max-width: maxElWidth;
  flex-direction: column;
  width: 100%;
  padding: 0;
}

.stepsContainer,
.stepContainer,
.step {
  composes: flex from 'styles/display.css';
  min-height: 580px;
  height: 100%;
  width: 100%;
  float: left;
  justify-content: normal;

  @media ScreenXSMax {
    width: 380px;
  }

  @media ScreenXXSMax {
    width: 345px;
  }

  @media HeightMDMax and ScreenXXSMax {
    width: 350px;
  }

  @media HeightSMMax and ScreenXXSMax {
    width: 315px;
  }
}

.stepIndicatorContainer {
  composes: marginXXLTop from 'sass-loader!styles/spacing.scss';
  composes: paddingXXLLeftRight from 'sass-loader!styles/spacing.scss';
}

.header,
.regularHeader,
.body,
.footer {
  width: 100%;
}

.header {
  composes: paddingXXLLeftRight from 'sass-loader!styles/spacing.scss';

  @media HeightMDMin and ScreenXSMax {
    min-height: calc((minHeight - 10px) * 0.5);
  }

  @media ScreenSMMin {
    min-height: 285px;
  }
}

.heading {
  composes: headerLG headlineFont from 'styles/typography.css';
  composes: marginLGTop from 'sass-loader!styles/spacing.scss';
  composes: paddingXXLLeftRight from 'sass-loader!styles/spacing.scss';
  margin-bottom: 0;
  -webkit-font-smoothing: antialiased;

  @media ScreenXXSMax {
    padding-left: 10px;
    padding-right: 10px;
  }
}

.headingHilight {
  composes: headerXL from 'styles/typography.css';
  color: DarkChilli;
}

.body {
  composes: textCenter from 'styles/typography.css';
}

.bodyText {
  composes: textRegular from 'styles/typography.css';
  composes: marginMDTop from 'sass-loader!styles/spacing.scss';
}

.basicInputContainer {
  min-width: 150px;
  width: 60%;
  display: block;
  @media ScreenXSMax {
    min-width: 200px;
  }
}

.inputContainer {
  composes: basicInputContainer;
  margin: 0 auto;
}

.animationContainer {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  overflow: hidden;
}

.animationContainer.autosize {
  position: relative;
  padding-bottom: 2rem;
}

.animation {
  composes: row from 'styles/flex.css';
  height: 100%;
  width: 100%;
  transition: all 0.5s cubic-bezier(0.77, 0, 0.175, 1);
  margin-left: 0;
}

.footer {
  composes: marginLGBottom from 'sass-loader!styles/spacing.scss';
}

.containerFluid {
  composes: container-fluid from 'sass-loader!styles/bootstrap.scss';
}

.row {
  composes: row from 'sass-loader!styles/bootstrap.scss';
  composes: marginMDTop from 'sass-loader!styles/spacing.scss';
}

.left,
.right {
  width: 50%;

  @media ScreenXSMax and HeightMDMax {
    width: 100%;
  }
}

.left {
  padding-left: SpacingMD;
  padding-right: calc(SpacingXS * 0.5);

  @media ScreenXSMax and HeightMDMax {
    padding: 0 SpacingSM;
  }
}

.right {
  padding-left: calc(SpacingXS * 0.5);
  padding-right: SpacingMD;

  @media ScreenXSMax and HeightMDMax {
    margin-top: SpacingSM;
    padding: 0 SpacingSM;
  }
}

.priceClarityRedesign {
  .fullWidth {
    padding: 0 1rem;

    @media BreakpointFromMedium {
      padding: 0 2rem;
    }
  }

  .stepsContainer {
    max-width: maxWidth;
    width: calc(100% - 32px);
  }

  .step {
    /* The formula is 100% / (steps.length + 1): now it will work only for 3 steps.
       Since it's enabled in the experiment only, it's not possible
       to move the formula to the js file for the time being. */
    width: 25%;
  }

  .stepContainer {
    width: 100%;
  }

  .stepsContainer,
  .stepContainer,
  .step {
    min-height: 0;
  }

  .pricingMinHeight {
    min-height: 370px;
  }

  .stepIndicatorContainer {
    padding: 0 1rem;

    @media BreakpointFromMedium {
      padding: 0 2rem;
    }
  }

  .header {
    min-height: 0;
    padding: 0;
    margin-bottom: 1.5rem;
  }

  .largerSpacing {
    margin-bottom: 1.5rem;
    @media BreakpointFromMedium {
      margin-bottom: 2rem;
    }
  }

  .bodyText {
    margin: 0;
  }
}

.discountApplied {
  padding-top: 0;
}
