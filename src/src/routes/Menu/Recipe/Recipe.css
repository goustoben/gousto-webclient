@value ScreenXSMax, ScreenMLMin, ScreenSMMin from 'styles/screenSizes.css';
@value SpacingLG as GutterSize, SpacingXS from 'sass-loader!styles/spacing.scss';
@value White from 'styles/colors.css';

@value ColumnWidth 32%;
@value FeaturedWidth 66%;
@value MobColumnWidth 100%;
@value MobGridWidth 50%;

.grid {
	composes: marginMDBottom from 'sass-loader!styles/spacing.scss';
	composes: borderXS from 'styles/borders.css';
	composes: flex, verticalCenter from 'styles/flex.css';
	background: White;
	border-radius: 0;
	vertical-align: top;
	composes: inlineBlock from 'styles/display.css';
	position: relative;
	width: 100%;
	@media ScreenXSMax {
		flex-basis: MobColumnWidth;
		border-left-width: 0;
		border-right-width: 0;
	}
}

.gridHover {
	&:hover {
		box-shadow: 0 4px 4px 0 rgba(51,61,71,0.40);
	}
}

.gridSmall {
	composes: grid;
	width: calc(MobGridWidth - SpacingXS);
}

.simple {
	composes: grid;
	width: 100%;
	height: 100%;
	pointer-events: none;
	cursor: default;
	margin: 0;
	padding: 0;
}

.featured {
	composes: grid;
	@media ScreenMLMin {
		flex-basis: FeaturedWidth;
	}
	@media ScreenXSMax {
		flex-basis: MobColumnWidth;
	}
}

.fineDineIn {
	composes: grid;
}

.ctaAllRecipe, .ctaThematic {
	flex-basis: 100%;

	@media ScreenSMMin {		
		flex-basis: ColumnWidth;
	}
}
