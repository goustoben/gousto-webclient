/**********************/
/***** All Mixins *****/
/**********************/

@mixin cursor-pointer {
	cursor: hand;
	cursor: pointer;
}
@mixin vendor-prefix($name, $argument) {
	-webkit-#{$name}: #{$argument};
	-ms-#{$name}: #{$argument};
	-moz-#{$name}: #{$argument};
	-o-#{$name}: #{$argument};
	#{$name}: #{$argument};
}
@mixin prop-vendor-prefix($name, $argument) {
	#{$name}: -webkit-#{$argument};
	#{$name}: -moz-#{$argument};
	#{$name}: -ms-#{$argument};
	#{$name}: -o-#{$argument};
}
@mixin serrated($color, $dir:false, $padding:false) {
	&:after {
		content: "";
		height: 12px;
		position: absolute;
		bottom: -12px;
		left: 0;
		right: 0;
		margin: 0 auto;
		background: linear-gradient(135deg, $color 25%, transparent 25%) center top repeat-x, linear-gradient(045deg, transparent 75%, $color 75%) center top repeat-x;
		background-size: 24px 12px;
		@if $dir {
			bottom: auto;
			top: -12px;
			@include vendor-prefix(transform, rotate(180deg));
		}

		@if $padding {
			width: 90%;
		} @else {
			width: 100%;
		}
	}
}
@mixin border-radius($radius...) {
	border-radius: $radius;
}
$exclude: false;
@mixin aspect-ratio($width : 1, $height : 1, $exclude: false) {
	@if $exclude != true {
		position: relative;
		&:before{
			display: block;
			content: " ";
			width: 100%;
			padding-top: ($height / $width) * 100%;
		}

		> .content {
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
		}
	}
	@else {
		&:before {
			padding-top: 0;
		}
		> .content {
			position: relative;
		}
	}
}
@mixin opacity($value){
	$IEValue: $value*100;
	opacity: $value;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
	filter: alpha(opacity=$IEValue);
}
@mixin circle($color, $bg-color, $border-color, $size){
	background-color: $bg-color;
	height: $size;
	width: $size;
	color: $color;
	border: 3px solid $border-color;
	border-radius: 50%;
}

@mixin placeholder {
	::-webkit-input-placeholder {
		@content;
	}
	:-moz-placeholder {
		@content;
	}
	::-moz-placeholder {
		@content;
	}
	:-ms-input-placeholder {
		@content;
	}
}

@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}
