import { CSSObject } from "@emotion/react";

/**
 * These styles depend on cascading CSS classes nested within each others.
 *
 * The Emotion framework does not support this explicitly,
 * but supplies mechanisms that could be used to replicate such behaviour.
 *
 * The idea is to mark "parent" classes with Emotion "labels" (suffix the framework
 * adds to the autogenerated class name) and then refer to such "parents" from
 * "children" component using CSS Attribute selectors.
 *
 * For more information please see discussion in this Emotion's issue:
 * https://github.com/emotion-js/emotion/issues/1217#issuecomment-1152995169
 */

const colorS200 = '#A29EFF'
const colorS400 = '#615CFF'
const colorS600 = '#412dee'
const outlineBroderWidth = '0.1875rem'
const outlineBorderRadius = '0.1875rem'

export const cssRecipeTileLinkText: CSSObject = {
  label: 'RecipeTileLinkText',
}

export const cssRecipeTileFineDineInLinkIcon: CSSObject = {
  label: 'RecipeTileFineDineInLinkIcon'
}

export const cssRecipeTileLinkIcon: CSSObject = {
  label: 'RecipeTileLinkIcon'
}

export const cssRecipeFineDineInTileLinkText: CSSObject = {
  label: 'RecipeFineDineInTileLinkText'
}

export const cssRecipeTileLink: CSSObject = {
  width: '100%',
  border: 'none',
  background: 'transparent',
  padding: '0',
  display: 'flex',
  justifyContent: 'space-between',
  alignItems: 'center',
  cursor: 'pointer',

  borderBottom: `0.0625rem solid ${colorS400}`,

  '&:focus': {
    outline: 'none',
    border: `${outlineBroderWidth} solid ${colorS400}`,
    borderRadius: outlineBorderRadius,
  },

  '&:hover': {
    borderBottomColor: colorS600,

    '[class$="RecipeTileLinkText"]': {
      color: colorS600,
    },

    '[class$="RecipeTileFineDineInLinkIcon"]': {
      color: colorS400
    },

    '[class$="RecipeTileLinkIcon"]': {
      color: colorS600
    }
  },

  '[class$="RecipeTileFineDineInLinkIcon"]': {
    color: colorS200
  },

  '[class$="RecipeTileLinkIcon"]': {
    color: colorS400
  }
}

export const cssRecipeTileFineDineInLink: CSSObject = {
  borderBottomColor: colorS200,

  '&:focus': {
    outline: 'none',
    border: `${outlineBroderWidth} solid ${colorS400}`,
    borderRadius: outlineBorderRadius,
  },

  '&:hover': {
    borderBottomColor: colorS400,

    '[class$="RecipeFineDineInTileLinkText"]': {
      color: colorS400,
    }
  }
}
