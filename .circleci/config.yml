---
version: 2.1
orbs:
  slack: circleci/slack@3.4.2

gousto_build_image: &gousto_build_image
    - image: ${AWS_ACCOUNT_NUMBER}.dkr.ecr.${ECR_AWS_REGION}.amazonaws.com/${GOUSTO_ENVIRONMENT}/circleci-image/node10:latest
      aws_auth:
        aws_access_key_id: $AWS_ERC_ACCESS_KEY
        aws_secret_access_key: $AWS_ERC_SECRET_KEY

gousto_build_image_docker: &gousto_build_image_docker
    - image: ${AWS_ACCOUNT_NUMBER}.dkr.ecr.${ECR_AWS_REGION}.amazonaws.com/${GOUSTO_ENVIRONMENT}/circleci-image/node10builder:latest
      aws_auth:
        aws_access_key_id: $AWS_ERC_ACCESS_KEY
        aws_secret_access_key: $AWS_ERC_SECRET_KEY

jobs:
  test-isomorphic-jest:
    docker: *gousto_build_image
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run isomoprhic jest tests
          command: cd src && npm run test:jest:ci
      - persist_to_workspace:
          root: ~/
          paths:
            - project
            - .circlerc

  publish-code-health:
    docker: *gousto_build_image
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Setup output folder
          command: mkdir /tmp/artifacts
      - run:
          name: Test coverage
          command: cd src && npm run test:jest:ci:coverage
      - run:
          name: eslint coverage
          command: cd src && scripts/run-eslint-ci.sh
      - run:
          name: Generate code health
          command: cd src && node ./scripts/print-code-health.js > /tmp/artifacts/${CODE_HEALTH_FILE_NAME}
      - store_artifacts:
          path: /tmp/artifacts

  setup-src:
    docker: *gousto_build_image
    steps:
      - checkout
      - run:
          name: Install global npm dependencies
          command: npm i -g gulp && npm i -g concurrently@2.2.0
      - run:
          name: Install isomorphic npm dependencies
          command: cd src && npm ci && npm run postinstall
      - persist_to_workspace:
          root: ~/
          paths:
            - project/src
            - project/tests
            - project/regression
            - project/ansible
            - project/cloudformation
            - project/kubernetes
            - project/service.yml

  setup-platform:
    docker: *gousto_build_image_docker
    steps:
      - checkout
      - run:
          name: Setup platform
          command: /gousto/platform-setup.sh
      - setup_remote_docker
      - run:
          name: Create & deploy image
          command: source ~/.circlerc && python ./ci_scripts/create_image.py --setup
          no_output_timeout: 10m
      - persist_to_workspace:
          root: ~/
          paths:
            - project/setup
            - project/scripts
            - project/ci_scripts
            - project/images
            - .circlerc

  build-application:
    docker: *gousto_build_image
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Setup common
          command: source ~/.circlerc && setup/setup-common.sh
      - run:
          name: Setup isomorphic
          command: source ~/.circlerc && setup/setup-isomorphic.sh
      - persist_to_workspace:
          root: ~/
          paths:
            - project/src

  build-nginx-image:
    docker: *gousto_build_image_docker
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ~/
      - run:
          name: Create & deploy image
          command: source ~/.circlerc && python ./ci_scripts/create_image.py --name nginx
          no_output_timeout: 10m

  build-webclient-image:
    docker: *gousto_build_image_docker
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ~/
      - run:
          name: Upload client to S3
          command: source ~/.circlerc && scripts/build-docker.sh
      - run:
          name: Create & deploy image
          command: source ~/.circlerc && python ./ci_scripts/create_image.py --name webclient
          no_output_timeout: 20m

  test-e2e-selenium:
    docker: *gousto_build_image
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Install curl
          command: apt-get -y update && apt-get -y install curl
      - run:
          name: Run e2e selenium tests
          command: source ~/.circlerc && scripts/validate.sh
      - slack/status:
          fail_only: true
          only_for_branches: 'develop'
          webhook: $E2E_TEST_NOTIFIER_WEBHOOK
          failure_message: 'The web E2E tests are failing on develop, please could a volunteer investigate. Playbook: https://gousto.atlassian.net/wiki/spaces/TECH/pages/1571914197/Debug+e2e+test+selenium+failure'


  test-e2e-selenium-mobile:
    docker: *gousto_build_image
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Install curl
          command: apt-get -y update && apt-get -y install curl
      - run:
          name: Run e2e selenium tests mobile
          command: source ~/.circlerc && scripts/validate-mobile.sh
      - slack/status:
          fail_only: true
          only_for_branches: 'develop'
          webhook: $E2E_TEST_NOTIFIER_WEBHOOK
          failure_message: 'The mobile E2E tests are failing on develop, please could a volunteer investigate. Playbook: https://gousto.atlassian.net/wiki/spaces/TECH/pages/1571914197/Debug+e2e+test+selenium+failure'

  test-regression:
    docker: *gousto_build_image
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run regression tests
          command: source ~/.circlerc && scripts/validate-regression.sh
      - store_artifacts:
          path: ~/project/tests/regression/screenshots

  test-regression-mobile:
    docker: *gousto_build_image
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run regression tests mobile
          command: source ~/.circlerc && scripts/validate-regression-mobile.sh
      - store_artifacts:
          path: ~/project/tests/regression/screenshots

  deploy-application:
    docker: *gousto_build_image
    steps:
      - attach_workspace:
          at: ~/
      - run: source ~/.circlerc && scripts/deploy.sh

  deploy-containers:
    docker: *gousto_build_image
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Deploy containers to ECS
          command: source ~/.circlerc && python ./ci_scripts/deploy_containers.py --service webclient
          no_output_timeout: 20m

  install-test-dependencies:
    docker: *gousto_build_image
    steps:
      - attach_workspace:
          at: ~/
      - run: source ~/.circlerc && scripts/install-test-dependencies.sh
      - persist_to_workspace:
          root: ~/
          paths:
            - project/tests/regression/node_modules
            - project/tests/e2e/node_modules
            - .cache/Cypress


workflows:
  version: 2

  stagingdr-environment:
    jobs:
      - setup-src:
          context: gousto-eu-west-2-beta-aws-app-circleci
          filters:
            branches:
              only:
                - stagingdr
      - setup-platform:
          context: gousto-eu-west-2-beta-aws-app-circleci
          filters:
            branches:
              only:
                - stagingdr
      - build-nginx-image:
          context: gousto-eu-west-2-beta-aws-app-circleci
          requires:
            - setup-platform
          filters:
            branches:
              only:
                - stagingdr
      - build-webclient-image:
          context: gousto-eu-west-2-beta-aws-app-circleci
          requires:
            - build-application
          filters:
            branches:
              only:
                - stagingdr
      - build-application:
          context: gousto-eu-west-2-beta-aws-app-circleci
          requires:
            - setup-src
            - setup-platform
          filters:
            branches:
              only:
                - stagingdr
      - deploy-application:
          context: gousto-eu-west-2-beta-aws-app-circleci
          requires:
            - build-application
          filters:
            branches:
              only:
                - stagingdr
      - deploy-containers:
          context: gousto-eu-west-2-beta-aws-app-circleci
          requires:
            - build-nginx-image
            - build-webclient-image
          filters:
            branches:
              only:
                - stagingdr
      - install-test-dependencies:
          context: gousto-eu-west-2-beta-aws-app-circleci
          requires:
            - setup-src
            - setup-platform
          filters:
            branches:
              only:
                - stagingdr
